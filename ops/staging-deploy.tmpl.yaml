# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# SOLR_ADMIN_PASSWORD
# MYSQL_ROOT_PASSWORD
# SECRET_KEY_BASE
# DATABASE_PASSWORD
# DATABASE_HOST=

replicaCount: 1

image:
  repository: ghcr.io/scientist-softserv/archives_online:latest
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
 - name: github

nameOverride: ""
fullnameOverride: ""

ingress:
  enabled: true
  hosts:
    - host: archives-online.notch8.cloud
      paths:
        - path: /
          pathType: ImplementationSpecific
  annotations: {
    kubernetes.io/ingress.class: "nginx",
    nginx.ingress.kubernetes.io/proxy-body-size: "0",
    cert-manager.io/cluster-issuer: letsencrypt-prod
  }
  tls:
    - hosts:
        - archives-online.notch8.cloud
      secretName: archives-online-tls

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# livenessProbe:
#   enabled: false
# readinessProbe:
#   enabled: false

# brandingVolume:
#   storageClass: aws-efs
# derivativesVolume:
#   storageClass: aws-efs
# uploadsVolume:
#   storageClass: aws-efs
#   size: 200Gi

# extraVolumeMounts: &volMounts
#   - name: uploads
#     mountPath: /app/samvera/hyrax-webapp/tmp/imports
#     subPath: imports
#   - name: uploads
#     mountPath: /app/samvera/hyrax-webapp/tmp/exports
#     subPath: exports
#   - name: uploads
#     mountPath: /app/samvera/hyrax-webapp/public/system
#     subPath: public-system
#   - name: uploads
#     mountPath: /app/samvera/hyrax-webapp/public/uploads
#     subPath: public-uploads
#   - name: uploads
#     mountPath: /app/samvera/hyrax-webapp/tmp/network_files
#     subPath: network-files
#   - name: uploads
#     mountPath: /app/samvera/hyrax-webapp/storage/files
#     subPath: storage-files



extraEnvVars: &envVars
  - name: CONFDIR
    value: "/home/app/webapp/solr/conf"
  - name: DATABASE_ADAPTER
    value: mysql2
  - name: DATABASE_HOST
    value: mysql.archives-online-staging.svc.cluster.local
  - name: DATABASE_USER
    value: archives-online
  - name: DATABASE_PASSWORD
    value: $DATABASE_PASSWORD
  - name: DATABASE_NAME
    value: indiana_arclight
  - name: PASSENGER_APP_ENV
    value: production
  - name: SOLR_ADMIN_USER
    value: admin
  - name: SOLR_ADMIN_PASSWORD
    value: $SOLR_ADMIN_PASSWORD
  - name: SOLR_COLLECTION_NAME
    value: archives-online
  - name: SOLR_CONFIGSET_NAME
    value: archives-online
  - name: SOLR_CORE
    value: archives-online
  - name: SOLR_HOST
    value: solr.staging-solr
  - name: SOLR_PORT
    value: "8983"
  - name: SOLR_URL
    value: http://admin:$SOLR_ADMIN_PASSWORD@solr.staging-solr:8983/solr/
  - name: SECRET_KEY_BASE
    value: $SECRET_KEY_BASE
  # - name: SENTRY_DSN
  #   value: $SENTRY_DSN
  # - name: SENTRY_ENVIRONMENT
  #   value: $SENTRY_ENVIRONMENT

mysql:
  image:
    registry: docker.io
    repository: bitnami/mysql
    tag: 8.4.2-debian-12-r2
  architecture: standalone
  auth:
    rootPassword: $MYSQL_ROOT_PASSWORD
    database: indiana_arclight
    username: archives-online
    password: $DATABASE_PASSWORD
    persistence:
      enabled: true
      size: 8Gi

externalSolrHost: solr.staging-solr.svc.cluster.local
externalSolrUser: admin
externalSolrCollection: "archives-online"
externalSolrPassword: $SOLR_ADMIN_PASSWORD

nginx:
  enabled: false
  image:
    registry: registry.gitlab.com
    repository: notch8/scripts/bitnami-nginx
    tag: 1.21.5-debian-10-r4
  serverBlock: |-
    upstream rails_app {
      server {{ .Values.global.hyraxName }};
    }

    map ${DOLLAR}status ${DOLLAR}loggable {
        ~^444  0;
        default 1;
    }

    log_format loki 'host=${DOLLAR}host ip=${DOLLAR}http_x_forwarded_for remote_user=${DOLLAR}remote_user [${DOLLAR}time_local] '
                      'request="${DOLLAR}request" status=${DOLLAR}status bytes=${DOLLAR}body_bytes_sent '
                      'referer="${DOLLAR}http_referer" agent="${DOLLAR}http_user_agent" request_time=${DOLLAR}request_time upstream_response_time=${DOLLAR}upstream_response_time upstream_response_length=${DOLLAR}upstream_response_length';

    error_log  /opt/bitnami/nginx/logs/error.log warn;
    #tcp_nopush     on;

    # Cloudflare ips see for refresh
    # https://support.cloudflare.com/hc/en-us/articles/200170786-Restoring-original-visitor-IPs-logging-visitor-IP-addresses
    # update list https://www.cloudflare.com/ips/
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2a06:98c0::/29;
    set_real_ip_from 2c0f:f248::/32;

    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    include /opt/bitnami/nginx/conf/conf.d/*.conf;
    server {
        listen 8080;
        server_name _;
        root /app/samvera/hyrax-webapp/public;
        index index.html;

        client_body_in_file_only clean;
        client_body_buffer_size 32K;
        client_max_body_size 0;
        access_log /opt/bitnami/nginx/logs/access.log loki;
        # if=${DOLLAR}loggable;

        sendfile on;
        send_timeout 300s;

        include /opt/bitnami/nginx/conf/bots.d/ddos.conf;
        include /opt/bitnami/nginx/conf/bots.d/blockbots.conf;

        location ~ (\.php|\.aspx|\.asp) {
        	return 404;
        }

        # deny requests for files that should never be accessed
        location ~ /\. {
          deny all;
        }

        location ~* ^.+\.(rb|log)${DOLLAR} {
          deny all;
        }

        # serve static (compiled) assets directly if they exist (for rails production)
        location ~ ^/(assets|packs|fonts|images|javascripts|stylesheets|swfs|system)/ {
          try_files ${DOLLAR}uri @rails;

          # access_log off;
          gzip_static on; # to serve pre-gzipped version

          expires max;
          add_header Cache-Control public;

          # Some browsers still send conditional-GET requests if there's a
          # Last-Modified header or an ETag header even if they haven't
          # reached the expiry date sent in the Expires header.
          add_header Last-Modified "";
          add_header ETag "";
          break;
        }

        # send non-static file requests to the app server
        location / {
          try_files ${DOLLAR}uri @rails;
        }

        location @rails {
          proxy_set_header  X-Real-IP  ${DOLLAR}remote_addr;
          proxy_set_header  X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
          proxy_set_header Host ${DOLLAR}http_host;
          proxy_redirect off;
          proxy_pass http://rails_app;
        }
    }